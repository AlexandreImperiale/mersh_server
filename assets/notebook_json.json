{
"cells": [
    // Example of succesful code cell, with no output.
    {
      "cell_type": "code",
      "execution_count": 1,
      "source": ["i=2"], // => list of strings.
      "metadata": { "collapsed": true }, // => some front specifics ?
      "outputs": []
    },

    // Example of succesful code cell with outputs.
    {
      "cell_type": "code",
      "execution_count": 2, // => number of in the exectution chain.
      "source": ["print i"],
      "metadata": { "collapsed": false },
      "outputs": [ {
          "name": "stdout",
          "output_type": "stream",
          "text": ["2\n"]
        } ] // => list of outputs.
    },

    // Example of a failing code cell with error outputs.
    {
        "cell_type": "code",
        "execution_count": 3,
        "source": ["i[3] = 5"], // failing code.
        "metadata": { "collapsed": false },
        "outputs": [ {
          "ename": "TypeError",
          "evalue": "'int' object does not support item assignment",
          "output_type": "error",
          "traceback": [
           "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
           "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
           "\u001b[1;32m<ipython-input-3-45352fdde936>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mi\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m3\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m5\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
           "\u001b[1;31mTypeError\u001b[0m: 'int' object does not support item assignment"]
        } ]
    },

    // Last cell, not executed
    {
      "cell_type": "code",
      "execution_count": null, // => can be used to: target source code to exectue in server side. and\or specific visualization in client side.
      "metadata": { "collapsed": true },
      "outputs": [],
      "source": ["j = i + 2"]
    } ] // => end "cells" list.

    "metadata": {
        // Some medate associated to the kernel ...
    }
}
